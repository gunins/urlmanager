{"version":3,"sources":["../../../es6/dev/router/MatchBinding.js"],"names":["root","factory","define","amd","exports","module","require","utils","MatchBinding","pattern","location","binder","replace","match","substring","route","ESCAPE_PARAM","OPTIONAL_PARAM","NAMED_PARAM","optional","SPLAT_PARAM","patternRegExp","RegExp","routeHandler","Set","leaveHandler","queryHandler","_active","mapHandler","subBinder","bind","reTrigger","add","handler","done","args","getArgs","length","clear","remove","test","matches","fragment","params","exec","slice","map","param","decodeURIComponent","MatchBinder","matched","status","split","prevLoc","currSegment","prevSegment","equals","clearActive","checkStatus","active","push","triggerLeave","disable","concat","extractParams","getLocation","applyHandlers","getFragment","trim","triggerRoutes","handlers","size","forEach","item","apply","Promise","resolve","items","stopped","Object","assign"],"mappings":"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","file":"MatchBinding.js","sourcesContent":["(function(root, factory) {\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([\n            './utils'\n        ], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('./utils'));\n    }\n}(this, function(utils) {\n    'use strict';\n\n\n    class MatchBinding {\n        constructor(pattern, location, binder) {\n            if (binder) {\n                this.binder = binder;\n            }\n            if (location === '') {\n                this.pattern = pattern.replace(/^\\(\\/\\)/g, '').replace(/^\\/|$/g, '');\n            } else {\n                let match = pattern.match(/^(\\/|\\(\\/)/g);\n                if (match === null) {\n                    pattern = pattern[0] === '(' ? '(/' + pattern.substring(1) : '/' + pattern;\n                }\n                this.pattern = pattern;\n            }\n\n            let route = this.pattern.replace(MatchBinding.ESCAPE_PARAM, '\\\\$&')\n                .replace(MatchBinding.OPTIONAL_PARAM, '(?:$1)?')\n                .replace(MatchBinding.NAMED_PARAM, function(match, optional) {\n                    return optional ? match : '([^\\/]+)';\n                }).replace(MatchBinding.SPLAT_PARAM, '(.*)');\n\n            this.patternRegExp = new RegExp('^' + route);\n\n            this.routeHandler = new Set();\n            this.leaveHandler = new Set();\n            this.queryHandler = new Set();\n            this._active = false;\n        }\n\n        setRoutes(mapHandler) {\n            var subBinder = this.subBinder;\n            mapHandler({\n                match: subBinder.match.bind(subBinder)\n            });\n            return this;\n        };\n\n        reTrigger() {\n            this.binder.reTrigger();\n        }\n\n        match(match) {\n            var subBinder = this.subBinder;\n            match(subBinder.match.bind(subBinder));\n            return this;\n        };\n\n        to(routeHandler) {\n            this.routeHandler.add({handler: routeHandler, done: false});\n            this.reTrigger();\n            return this;\n        };\n\n        leave(leaveHandler) {\n            var args = utils.getArgs(leaveHandler);\n            this.leaveHandler.add({handler: leaveHandler, done: (args.length > 0 && args[0] === 'done')});\n            return this;\n        };\n\n        query(queryHandler) {\n            this.queryHandler.add({handler: queryHandler, done: false});\n            return this;\n        };\n\n        remove() {\n            this.routeHandler.clear();\n            this.leaveHandler.clear();\n            this.queryHandler.clear();\n            this.subBinder.remove();\n            return this;\n        };\n\n        test(location) {\n            return this.patternRegExp.test(location);\n        };\n\n        getFragment(location) {\n            let matches = location.match(this.patternRegExp);\n            return matches === null ? '' : location.substring(matches[0].length);\n        };\n\n        extractParams(fragment) {\n            let params = this.patternRegExp.exec(fragment)\n            if (params && params.length > 0) {\n                return params.slice(1).map(function(param) {\n                    return param ? decodeURIComponent(param) : null;\n                });\n            } else {\n                return [];\n            }\n        };\n\n        setSubBinder(MatchBinder, pattern, mapHandler) {\n            let subBinder = new MatchBinder(pattern, this);\n            this.subBinder = subBinder;\n            if (typeof mapHandler === 'function') {\n                mapHandler(subBinder.match.bind(subBinder));\n            }\n            return subBinder;\n        };\n\n\n        checkSegment(matched, params) {\n            let status = [];\n            if (this._active) {\n                let pattern = this.pattern.replace(/\\((.*?)\\)/g, '$1').replace(/^\\//, '').split('/'),\n                    prevLoc = this.prevLoc.replace(/^\\//, '').split('/'),\n                    currSegment = matched.slice(0, pattern.length),\n                    prevSegment = prevLoc.slice(0, pattern.length),\n                    equals = (utils.equals(currSegment, prevSegment));\n\n                if (!equals) {\n                    status = this.clearActive(params);\n                } else if (matched.length > 1) {\n                    status = this.subBinder.checkStatus(matched.slice(pattern.length), params);\n                } else if (equals) {\n                    status = this.subBinder.clearActive(params);\n                }\n            }\n            return status;\n        }\n\n        clearActive(params) {\n            let active = [];\n            if (this._active) {\n                active.push({\n                    handler: this.triggerLeave(params),\n                    disable: this.disable.bind(this)\n                });\n            }\n\n            return active.concat(this.subBinder.clearActive());\n        }\n\n        disable() {\n            this._active = false;\n        }\n\n        triggerTo(location, params) {\n            if (this.test(location)) {\n                // check if to is triggered\n                if (!this._active) {\n                    this.prevLoc = location;\n                    let args = this.extractParams(location).concat(utils.getLocation(params, location));\n                    this.applyHandlers(this.routeHandler, args);\n                    this._active = true;\n                }\n\n                // trigger query handler\n                this.applyHandlers(this.queryHandler, [utils.getLocation(params, location)]);\n\n                let fragment = this.getFragment(location);\n                if (fragment.trim() !== '') {\n                    let subBinder = this.subBinder;\n                    if (subBinder) {\n                        subBinder.triggerRoutes(fragment, params);\n                    }\n                }\n            }\n        };\n\n        applyHandlers(handlers, args = []) {\n            if (handlers && handlers.size > 0) {\n                handlers.forEach((item)=> {\n                    item.handler.apply(this, args);\n                });\n            }\n        };\n\n        triggerLeave(params) {\n            return new Promise((resolve)=> {\n                let handlers = this.leaveHandler,\n                    location = utils.getLocation(params, this.prevLoc),\n                    items = 0,\n                    stopped = false;\n                if (handlers && handlers.size > 0) {\n                    handlers.forEach((item)=> {\n                        if (item.done) {\n                            items++;\n                        }\n                        item.handler((done = true)=> {\n                            if (done) {\n                                items--;\n                                if (items === 0 && !stopped) {\n                                    resolve(true);\n                                }\n                            } else if (!done && !stopped) {\n                                stopped = true;\n                                resolve(false);\n                            }\n                        }, location);\n                    });\n                }\n                if (items === 0) {\n                    resolve(true);\n                }\n            });\n        };\n\n\n    }\n\n    Object.assign(MatchBinding, {\n        OPTIONAL_PARAM: /\\((.*?)\\)/g,\n        NAMED_PARAM:    /(\\(\\?)?:\\w+/g,\n        SPLAT_PARAM:    /\\*\\w+/g,\n        ESCAPE_PARAM:   /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g\n    });\n\n    return MatchBinding;\n}));"]}