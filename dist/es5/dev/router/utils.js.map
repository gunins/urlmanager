{"version":3,"sources":["../../../es6/dev/router/utils.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["/*globals define*/\n(function(root, factory) {\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    }\n}(this, function() {\n    'use strict';\n\n    function parseParams(value) {\n        try {\n            return decodeURIComponent(value.replace(/\\+/g, ' '));\n        }\n        catch (err) {\n            // Failover to whatever was passed if we get junk data\n            return value;\n        }\n    }\n\n    function iterateQueryString(queryString, callback) {\n        let keyValues = queryString.split('&');\n        keyValues.forEach((keyValue)=> {\n            let arr = keyValue.split('=');\n            callback(arr.shift(), arr.join('='));\n        });\n    }\n\n    function setQuery(parts) {\n        let query = {};\n        if (parts) {\n            iterateQueryString(parts, (name, value)=> {\n                value = parseParams(value);\n                if (!query[name]) {\n                    query[name] = value;\n                }\n                else if (typeof query[name] === 'string') {\n                    query[name] = [query[name], value];\n                }\n                else {\n                    query[name].push(value);\n                }\n            });\n        }\n        return query;\n    }\n\n    function serialize(obj) {\n        let str = [];\n        for (let p in obj)\n            if (obj.hasOwnProperty(p)) {\n                str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n            }\n        return str.join(\"&\");\n    };\n\n    function getLocation(params, pattern) {\n\n        return {\n            getQuery() {\n                return params.query;\n            },\n            getLocation(fragment = '', isQuery) {\n                let current = params.root.substring(0, params.root.length - pattern.length),\n                    newQuery;\n\n                if (isQuery === true) {\n                    newQuery = serialize(params.query);\n                }\n                else if (isQuery === false) {\n                    newQuery = '';\n                }\n                else {\n                    newQuery = serialize(isQuery);\n                }\n                return current + fragment + (newQuery.length === 0 ? '' : '?' + newQuery);\n            }\n        }\n    };\n\n    // attach the .equals method to Array's prototype to call it on any array\n    function equals(arr1, arr2) {\n        // if the other arr2 is a falsy value, return\n        if (!arr2)\n            return false;\n        // compare lengths - can save a lot of time\n        if (arr1.length !== arr2.length)\n            return false;\n\n        for (let i = 0, l = arr1.length; i < l; i++) {\n            // Check if we have nested arrays\n            if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\n                // recurse into the nested arrays\n                if (!equals(arr1[i], arr2[i]))\n                    return false;\n            }\n            else if (arr1[i] !== arr2[i]) {\n                // Warning - two different object instances will never be equal: {x:20} != {x:20}\n                return false;\n            }\n        }\n        return true;\n    };\n    const STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg,\n        ARGUMENT_NAMES = /(?:^|,)\\s*([^\\s,=]+)/g;\n\n    function getArgs(func) {\n        let fnStr = func.toString().replace(STRIP_COMMENTS, ''),\n            argsList = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')),\n            result = argsList.match(ARGUMENT_NAMES);\n        return (result === null) ? [] : result.map(item=>item.replace(/[\\s,]/g, ''));\n    }\n\n    return {\n        serialize, getLocation, equals, setQuery, getArgs\n    }\n\n}));"]}