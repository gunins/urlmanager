{"version":3,"sources":["../../../es6/dev/router/Router.js"],"names":[],"mappings":";;;;;;;;;AACA,CAAC,UAAS,IAAT,EAAe,OAAf,EAAwB;;AAErB,QAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;;AAE5C,eAAO,CACH,eADG,EAEH,SAFG,CAAP,EAGG,OAHH,EAF4C;KAAhD,MAMO,IAAI,QAAO,yDAAP,KAAmB,QAAnB,EAA6B;;;;AAIpC,eAAO,OAAP,GAAiB,QAAQ,QAAQ,eAAR,CAAR,EAAkC,QAAQ,SAAR,CAAlC,CAAjB,CAJoC;KAAjC;CARV,aAcO,UAAS,WAAT,EAAsB,KAAtB,EAA6B;AAC7B,iBAD6B;;QAGvB;AACF,iBADE,MACF,CAAY,QAAZ,EAAsB;kCADpB,QACoB;;AAClB,gBAAI,aAAa,SAAb,IAA0B,aAAa,EAAb,EAAiB;AAC3C,qBAAK,SAAL,GAAiB,SAAS,OAAT,CAAiB,UAAjB,EAA6B,EAA7B,IAAmC,GAAnC,CAD0B;aAA/C;AAGA,iBAAK,IAAL,GAAY,KAAK,SAAL,EAAZ,CAJkB;AAKlB,iBAAK,QAAL,GAAgB,EAAhB,CALkB;SAAtB;;qBADE;;sCASQ,UAAU;AAChB,uBAAO,IAAI,WAAJ,CAAgB,QAAhB,CAAP,CADgB;;;;iCAIf,KAAK;AACN,uBAAO,IAAI,MAAJ,CAAW,MAAM,KAAK,SAAL,EAAgB,GAAjC,EAAsC,IAAtC,CAA2C,GAA3C,CAAP,CADM;;;;wCAIE,KAAK;AACb,oBAAI,WAAW,IAAI,OAAJ,CAAY,QAAZ,EAAsB,EAAtB,CAAX,CADS;AAEb,oBAAI,KAAK,SAAL,KAAmB,SAAnB,EAA8B;AAC9B,wBAAI,KAAK,IAAL,CAAU,QAAV,CAAJ,EAAyB;AACrB,+BAAO,SAAS,OAAT,CAAiB,KAAK,SAAL,EAAgB,EAAjC,CAAP,CADqB;qBAAzB,MAEO;AACH,+BAAO,KAAP,CADG;qBAFP;iBADJ;AAOA,uBAAO,QAAP,CATa;;;;oCAYT,UAAU;AACd,oBAAI,KAAK,OAAL,EAAc;AACd,wBAAI,QAAQ,SAAS,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAR;wBACA,MAAM,KAAK,WAAL,CAAiB,MAAM,CAAN,CAAjB,CAAN,CAFU;AAGd,wBAAI,GAAJ,EAAS;AACL,4BAAI,QAAQ,MAAM,QAAN,CAAe,MAAM,CAAN,CAAf,CAAR;4BACA,SAAS;AACL,kCAAO,GAAP;AACA,mCAAO,KAAP;yBAFJ,CAFC;AAML,6BAAK,IAAL,CAAU,OAAV,CAAkB,MAAlB,EAA0B,GAA1B,EANK;qBAAT;;;;;;;;;;;;;;;AAHc,iBAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAwFE,YAAY;AACd,2BAAW,KAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,CAAqB,KAAK,IAAL,CAAhC,EADc;;;;oCAIV;AACJ,qBAAK,OAAL,GAAe,IAAf,CADI;;;;mCAID;AACH,qBAAK,OAAL,GAAe,KAAf,CADG;;;;eA9HL;QAHuB;;AAqI7B,WAAO,MAAP,CArI6B;CAA7B,CAdR","file":"Router.js","sourcesContent":["/*globals define*/\n(function(root, factory) {\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([\n            './MatchBinder',\n            './utils'\n        ], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('./MatchBinder'), require('./utils'));\n    }\n}(this, function(MatchBinder, utils) {\n        'use strict';\n\n        class Router {\n            constructor(location) {\n                if (location !== undefined && location !== '') {\n                    this._location = location.replace(/^\\/|\\/$/g, '') + '/';\n                }\n                this.root = this.getBinder();\n                this.bindings = [];\n            };\n\n            getBinder(location) {\n                return new MatchBinder(location);\n            };\n\n            test(loc) {\n                return new RegExp('^' + this._location, 'g').test(loc);\n            }\n\n            getLocation(loc) {\n                let location = loc.replace(/^\\/|$/g, '');\n                if (this._location !== undefined) {\n                    if (this.test(location)) {\n                        return location.replace(this._location, '');\n                    } else {\n                        return false;\n                    }\n                }\n                return location;\n            };\n\n            trigger(location) {\n                if (this.started) {\n                    let parts = location.split('?', 2),\n                        loc = this.getLocation(parts[0]);\n                    if (loc) {\n                        let query = utils.setQuery(parts[1]),\n                            params = {\n                                root:  loc,\n                                query: query\n                            };\n                        this.root.trigger(params, loc);\n                    }\n\n                    /*  this.bindings = this.bindings.filter((binding)=> {\n\n                     let fragment = binding.checkSegment(matched.slice(0), loc);\n\n                     if (fragment) {\n                     matched = fragment;\n                     binding.trigger('leave', params, location);\n                     binding.setOnBind();\n                     }\n                     return !fragment;\n                     });\n\n\n                     let bindings = this.find(this.root, loc);\n                     if (bindings.length > 0) {\n                     bindings.forEach(binding=>this.onBinding(loc, params, binding));\n                     }*/\n                }\n            };\n\n            /*  find(binder, location) {\n             let bindings = binder.filter(location);\n             return bindings;\n             };*/\n\n            /*     execute(binder) {\n             let binderlocation = binder.location.split('/'),\n             rootLocation = binder.params.root.split('/'),\n             location = '/' + rootLocation.splice(binderlocation.length, rootLocation.length -\n             binderlocation.length).join('/');\n             let bindings = this.find(binder, location);\n             if (bindings.length > 0) {\n             bindings.forEach(binding=>this.onBinding(location, binder.params, binding));\n             }\n\n             };*/\n\n            /*       onBinding(location, params, binding) {\n             binding.setOnBind(this.onBinding.bind(this, location, params, binding));\n             this.runHandler(location, params, binding);\n             let fragment = binding.getFragment(location);\n             let subBinder = binding.getSubBinder();\n             if (subBinder && subBinder.bindings && subBinder.bindings.length > 0) {\n             let bindings = this.find(subBinder, fragment);\n             if (bindings.length > 0) {\n             bindings.forEach(binding=>this.onBinding(fragment, params, binding));\n             }\n\n             }\n             let subRoutes = binding.getRoutes();\n             if (subRoutes && subRoutes.length > 0) {\n             while (subRoutes.length > 0) {\n             let Route = subRoutes[0],\n             binder = new MatchBinder(binding.location || binding.getFragment(location), params, this.execute.bind(this));\n             console.log(binder);\n             Route(binder);\n             subBinder.bindings = subBinder.bindings.concat(binder.bindings);\n             subRoutes.shift();\n             }\n             }\n\n             };*/\n\n\n            /* runHandler(location, params, binding) {\n\n             if (this.bindings.indexOf(binding) === -1) {\n             binding.trigger('to', params, location);\n\n             this.bindings.push(binding);\n             }\n             binding.trigger('query', params, location);\n\n\n             };*/\n\n            match(mapHandler) {\n                mapHandler(this.root.match.bind(this.root));\n            };\n\n            start() {\n                this.started = true;\n            };\n\n            stop() {\n                this.started = false;\n            };\n        }\n        return Router;\n    }\n));\n"]}