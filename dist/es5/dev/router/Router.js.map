{"version":3,"sources":["../../../es6/dev/router/Router.js"],"names":[],"mappings":"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","file":"Router.js","sourcesContent":["/*globals define*/\n(function(root, factory) {\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([\n            './MatchBinder',\n            './utils'\n        ], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('./MatchBinder'), require('./utils'));\n    }\n}(this, function(MatchBinder, utils) {\n        'use strict';\n\n        class Router {\n            constructor(location) {\n                if (location !== undefined && location !== '') {\n                    this._location = location.replace(/^\\/|\\/$/g, '') + '/';\n                }\n                this.root = this.getBinder();\n                this._listeners = new Set();\n                this._handlers = new Set();\n            };\n\n            getBinder() {\n                return new MatchBinder('', this);\n            };\n\n            test(loc) {\n                return new RegExp('^' + this._location, 'g').test(loc);\n            }\n\n            getLocation(loc) {\n                let location = loc.replace(/^\\/|$/g, '');\n                if (this._location !== undefined) {\n                    if (this.test(location)) {\n                        return location.replace(this._location, '');\n                    } else {\n                        return false;\n                    }\n                }\n                return location;\n            };\n\n            reTrigger() {\n                if (this.currLocation) {\n                    this.trigger(this.currLocation);\n                }\n            };\n\n\n            trigger(location) {\n                if (this.started && location) {\n                    // this.started = false;\n                    this.currLocation = location;\n                    let parts = location.split('?', 2),\n                        segments = this.getLocation(parts[0]);\n                    if (segments || segments === '') {\n                        let query = utils.setQuery(parts[1]),\n                            params = {\n                                root:  segments,\n                                query: query\n                            };\n                        this.execute(segments, params)\n                            .then(move=>this.setRoutes(move, segments, params))\n                            .then(move=> this.setLocation(move));\n                    }\n                }\n            };\n\n            execute(location, params) {\n                return new Promise((resolve)=> {\n                    let matched = location.replace(/^\\/|$/g, '').split('/'),\n                        binder = this.root,\n                        active = binder.checkStatus(matched, params);\n                    if (active.length > 0) {\n                        active.forEach((item)=> {\n                            item.handler.then((applied)=> {\n                                if (!item.triggered) {\n                                    item.triggered = true;\n                                    item.applied = applied;\n                                    if (active.filter(item=>item.applied).length === active.length) {\n                                        active.forEach(item=>item.disable());\n                                        resolve(true);\n                                    } else if (active.filter(item=>item.triggered).length === active.length) {\n                                        resolve(false);\n                                    }\n                                }\n                            });\n                        });\n                    } else {\n                        resolve(true);\n                    }\n                });\n            };\n\n            setRoutes(move, location, params) {\n                if (move) {\n                    this._handlers.forEach(handler=>handler());\n                    this.root.triggerRoutes(location, params);\n                }\n                return move;\n            };\n\n            setListener(listener) {\n                let listeners = this._listeners;\n                listeners.add(listener);\n                return {\n                    remove(){\n                        listeners.delete(listener);\n                    }\n                }\n            };\n\n            onRouteChange(handler) {\n                let handlers = this._handlers;\n                handlers.add(handler);\n                return {\n                    remove(){\n                        handlers.delete(handler);\n                    }\n                }\n            };\n\n\n            setLocation(move) {\n                let location = move ? this.currLocation : this.prevLocation;\n                this.prevLocation = location;\n                // this.started = true;\n                this._listeners.forEach(listener=>listener(location, move));\n            };\n\n            match(mapHandler) {\n                mapHandler(this.root.match.bind(this.root));\n            };\n\n            start() {\n                this.started = true;\n            };\n\n            stop() {\n                this.started = false;\n            };\n        }\n        return Router;\n    }\n));\n"]}