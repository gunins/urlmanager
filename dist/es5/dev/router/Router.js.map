{"version":3,"sources":["../../../es6/dev/router/Router.js"],"names":[],"mappings":"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","file":"Router.js","sourcesContent":["/*globals define*/\n(function(root, factory) {\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([\n            './MatchBinder'\n        ], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('./MatchBinder'));\n    } else {\n        // Browser globals (root is window)\n        root.UrlManager = root.UrlManager || {};\n        root.UrlManager.Router = factory(root.UrlManager.MatchBinder);\n    }\n}(this, function(MatchBinder) {\n    'use strict';\n\n    // attach the .equals method to Array's prototype to call it on any array\n    Array.prototype.equals = function(array) {\n        // if the other array is a falsy value, return\n        if (!array)\n            return false;\n        // compare lengths - can save a lot of time\n        if (this.length != array.length)\n            return false;\n\n        for (let i = 0, l = this.length; i < l; i++) {\n            // Check if we have nested arrays\n            if (this[i] instanceof Array && array[i] instanceof Array) {\n                // recurse into the nested arrays\n                if (!this[i].equals(array[i]))\n                    return false;\n            }\n            else if (this[i] != array[i]) {\n                // Warning - two different object instances will never be equal: {x:20} != {x:20}\n                return false;\n            }\n        }\n        return true;\n    };\n\n    function parseParams(value) {\n        try {\n            return decodeURIComponent(value.replace(/\\+/g, ' '));\n        }\n        catch (err) {\n            // Failover to whatever was passed if we get junk data\n            return value;\n        }\n    }\n\n    function iterateQueryString(queryString, callback) {\n        let keyValues = queryString.split('&');\n        keyValues.forEach((keyValue)=> {\n            let arr = keyValue.split('=');\n            callback(arr.shift(), arr.join('='));\n        });\n    }\n\n    function getLocation(fragment, isQuery, params, location) {\n        let current = params.root.substring(0, params.root.length - location.length), newQuery;\n        fragment = fragment || '';\n        if (isQuery === true) {\n            newQuery = this.serialize(params.query);\n        }\n        else if (isQuery === false) {\n            newQuery = '';\n        }\n        else {\n            newQuery = this.serialize(isQuery);\n        }\n        return current + fragment + (newQuery.length === 0 ? '' : '?' + newQuery);\n    }\n\n    class Router {\n        constructor() {\n            this.root = this.getBinder();\n            this.bindings = [];\n        };\n\n        getBinder() {\n            return new MatchBinder();\n        };\n\n        match(mapHandler) {\n            mapHandler(this.root.match.bind(this.root));\n        };\n\n        trigger(location) {\n            if (this.started) {\n                let parts = location.split('?', 2);\n                let query = {};\n                if (parts[1]) {\n                    iterateQueryString(parts[1], function(name, value) {\n                        value = parseParams(value);\n                        if (!query[name]) {\n                            query[name] = value;\n                        }\n                        else if (typeof query[name] === 'string') {\n                            query[name] = [query[name], value];\n                        }\n                        else {\n                            query[name].push(value);\n                        }\n                    });\n                }\n                let loc = parts[0].replace(/^\\/|$/g, ''),\n                    params = {\n                        root:  loc,\n                        query: query\n                    },\n                    notValid = [],\n                    matched = false;\n\n                this.bindings.forEach(function(binder) {\n                    let fragment,\n                        pattern = binder.pattern.replace(/\\((.*?)\\)/g, '$1').replace(/^\\//, '').split('/'),\n                        binderLocation = binder.location.split('/'),\n                        prevLoc = binder.prevLoc.replace(/^\\//, '').split('/'),\n                        checkSegment = function(link) {\n                            let currSegment = link.splice(binderLocation.length - pattern.length, pattern.length),\n                                prevSegment = prevLoc.splice(0, pattern.length);\n                            return (!currSegment.equals(prevSegment));\n                        };\n                    fragment = checkSegment(matched || loc.split('/'));\n                    if (fragment) {\n                        matched = loc.split('/').splice(0, binderLocation.length - pattern.length);\n                        let handler = binder.getLeaveHandler(),\n                            args = [];\n                        binder.setOnBind();\n\n                        this.applyHandler(handler, args, params, location);\n                        notValid.push(binder);\n                    }\n                }.bind(this));\n\n                notValid.forEach(function(binder) {\n                    this.bindings.splice(this.bindings.indexOf(binder), 1);\n                }.bind(this));\n\n                this.find(this.root, loc, params);\n            }\n        };\n\n        find(binder, location, params) {\n            let bindings = binder.filter(location);\n            bindings.forEach(this.onBinding.bind(this, location, params));\n        };\n\n        execute(binder) {\n            let binderlocation = binder.location.split('/'),\n                rootLocation = binder.params.root.split('/'),\n                location = '/' + rootLocation.splice(binderlocation.length, rootLocation.length -\n                        binderlocation.length).join('/');\n            this.find(binder, location, binder.params);\n        };\n\n        onBinding(location, params, binding) {\n            binding.setOnBind(this.onBinding.bind(this, location, params, binding))\n            this.runHandler(location, params, binding);\n            let fragment = binding.getFragment(location);\n            let subBinder = binding.getSubBinder();\n            if (subBinder && subBinder.bindings && subBinder.bindings.length > 0) {\n                this.find(subBinder, fragment, params);\n            }\n            let subRoutes = binding.getRoutes();\n            if (subRoutes && subRoutes.length > 0) {\n                while (subRoutes.length > 0) {\n                    let Route = subRoutes[0],\n                        binder = new MatchBinder(binding.getFragment(location), params, this.execute.bind(this), binding.location);\n                    Route(binder);\n                    subBinder.bindings = subBinder.bindings.concat(binder.bindings);\n                    subRoutes.shift();\n                }\n            }\n\n        };\n\n        serialize(obj) {\n            let str = [];\n            for (let p in obj)\n                if (obj.hasOwnProperty(p)) {\n                    str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n                }\n            return str.join(\"&\");\n        };\n\n        runHandler(location, params, binding) {\n\n            if (this.bindings.indexOf(binding) === -1) {\n                let handler = binding.getHandler();\n                let args = binding.extractParams(location);\n\n                binding.prevLoc = location;\n\n                this.applyHandler(handler, args, params, location);\n                this.bindings.push(binding);\n            }\n\n            let handler = binding.getQueryHandler();\n            if (handler) {\n                this.applyHandler(handler, [], params, location);\n            }\n\n        };\n\n        applyHandler(handlers, args, params, location) {\n            if (handlers && handlers.length > 0) {\n                handlers.forEach(function(handler) {\n                    handler.apply(this, args.concat({\n                        getQuery:    function() {\n                            return params.query;\n                        },\n                        getLocation: function(fragment, isQuery) {\n                            return getLocation.call(this, fragment, isQuery, params, location)\n                        }.bind(this)\n                    }));\n                }.bind(this));\n            }\n        };\n\n        start() {\n            this.started = true;\n        };\n\n        stop() {\n            this.started = false;\n        };\n    }\n    return Router;\n}));\n"]}