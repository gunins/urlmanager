{"version":3,"sources":["../../../es6/dev/router/MatchBinder.js"],"names":[],"mappings":"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","file":"MatchBinder.js","sourcesContent":["(function(root, factory) {\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([\n            './MatchBinding'\n        ], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('./MatchBinding'));\n    } else {\n        // Browser globals (root is window)\n        root.UrlManager = root.UrlManager || {};\n        root.UrlManager.MatchBinder = factory(root.UrlManager.MatchBinding);\n    }\n}(this, function(MatchBinding) {\n    'use strict';\n\n    class MatchBinder {\n        constructor(location, params, command) {\n            this.bindings = [];\n            this._activeBindings = [];\n            this.location = location || '';\n            this.command = command;\n            this.params = params;\n            this._active = false;\n\n        }\n\n        match(pattern, mapHandler) {\n            if (typeof pattern === 'function') {\n                mapHandler = pattern;\n                pattern = false;\n            }\n            if (pattern === '') {\n                pattern = false;\n            }\n            return this.getMatchBinding(pattern, mapHandler);\n        };\n\n        getMatchBinding(pattern, mapHandler) {\n            let binding = new MatchBinding(pattern, this.location, this);\n            binding.setSubBinder(MatchBinder, this.location + (pattern || ''), mapHandler);\n            this.bindings.push(binding);\n            return binding;\n\n        };\n\n        filter(location) {\n            let bindings = this.bindings.filter(function(binding) {\n                return binding.test(location);\n            });\n            return bindings;\n        };\n\n        clearActive(params, location) {\n            if (this._activeBindings.length > 0) {\n                this._activeBindings.forEach((binding)=> binding.clearActive(params, location));\n                this._activeBindings = [];\n            }\n        };\n\n        checkStatus(matched, params) {\n            if (this._activeBindings.length > 0) {\n                this._activeBindings = this._activeBindings.filter((binding)=> {\n                    return binding.checkSegment(matched, params);\n                });\n            }\n        };\n\n        trigger(params, location) {\n            let matched = location.replace(/^\\/|$/g, '').split('/');\n            this.checkStatus(matched, params);\n            this.onBinding(location, params);\n        };\n\n        onBinding(location, params) {\n            let bindings = this.filter(location);\n            if (bindings.length > 0) {\n                bindings.forEach(binding=> {\n                    this.runHandler(location, params, binding);\n                    let fragment = binding.getFragment(location);\n                    if (fragment.trim() !== '') {\n                        let subBinder = binding.getSubBinder();\n                        if (subBinder && subBinder.bindings && subBinder.bindings.length > 0) {\n                            subBinder.trigger(params, fragment);\n                        }\n                    }\n                });\n            }\n        };\n\n        runHandler(location, params, binding) {\n            if (this._activeBindings.indexOf(binding) === -1) {\n                binding.trigger('to', params, location);\n                this._activeBindings.push(binding);\n            }\n            binding.trigger('query', params, location);\n        };\n\n        run() {\n            this.command(this);\n        };\n    }\n\n    return MatchBinder;\n}));\n"]}